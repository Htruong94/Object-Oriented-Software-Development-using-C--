//==============================================
// Name:           Hung Truong
// Student Number: 147779193
// Email:          htruong19@myseneca.ca
// Section:        NAA
// Date:           November 13, 2020
//==============================================
// OOP345 Workshop 6 Reflection
//==============================================
	In this workshop, I have learnt how to use algorithm which lets me carry out tasks that I would usually perform through a self-written code that would have taken multiple line to a one line code that would effectively perform the function on a vector. There were 6 unique algorithms used from the numeric and algorithm library that were used a single time in the workshop which taught me there are different algorithms I could use effectively instead of using a for_each function with the lambda function that mirrors an algorithm such as the copy_if. This for_each or any STL algorithm is functionally the same as a manual loop with codes that mirrors the STL algorithm. But the STL algorithm has many advantages over the manual loop as it would shorten your code dramatically while minimizing any errors that could arise from manual loops and have a cleaner code while maintaining functionality. In the numeric library, I learn how to use it to accumulate a certain member variable and find the total within the vector which would allow me in the future to expand towards other numeric expression outside the summation. Another main concept I have learnt with algorithms is the sort algorithm which effectively rearrange the values within the vector according to the condition given. This concept when manually coding would normally take a considerable amount of lines to effectively sort a vector or an array while this is effectively one line which is a powerful tool to know that is also the same for every other algorithm. 
	When using the sort function, there is a chance where the client would input an invalid string that would cause an error to the sort function. To combat this, I would implement an exception which catches any string that does not match any parameters given and throw the string and display the input string name to the client. This would prevent the client from causing any errors that could happen as demonstrated in the sort function. 
	As this workshop was mostly on algorithms which has similar functionality as manual functions, it was easier to understand the concept behind them. The difficulty stems from the syntax in using the algorithm but after learning one algorithm, the other algorithms became simpler. Therefore, there was not any noticeable difficulties in the workshop aside from the syntax.

